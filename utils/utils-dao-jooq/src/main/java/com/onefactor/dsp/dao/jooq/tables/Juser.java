/*
 * This file is generated by jOOQ.
*/
package com.onefactor.dsp.dao.jooq.tables;


import com.onefactor.dsp.dao.jooq.Keys;
import com.onefactor.dsp.dao.jooq.Public;
import com.onefactor.dsp.dao.jooq.tables.records.JuserRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Juser extends TableImpl<JuserRecord> {

    private static final long serialVersionUID = 7120081;

    /**
     * The reference instance of <code>public.juser</code>
     */
    public static final Juser JUSER = new Juser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JuserRecord> getRecordType() {
        return JuserRecord.class;
    }

    /**
     * The column <code>public.juser.id</code>.
     */
    public final TableField<JuserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('juser_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.juser.mail</code>.
     */
    public final TableField<JuserRecord, String> MAIL = createField("mail", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>public.juser.password</code>.
     */
    public final TableField<JuserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(1024), this, "");

    /**
     * The column <code>public.juser.first_name</code>.
     */
    public final TableField<JuserRecord, String> FIRST_NAME = createField("first_name", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>public.juser.last_name</code>.
     */
    public final TableField<JuserRecord, String> LAST_NAME = createField("last_name", org.jooq.impl.SQLDataType.VARCHAR.length(256), this, "");

    /**
     * The column <code>public.juser.is_disabled</code>.
     */
    public final TableField<JuserRecord, Boolean> IS_DISABLED = createField("is_disabled", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.juser.created_at</code>.
     */
    public final TableField<JuserRecord, LocalDateTime> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.LOCALDATETIME.defaultValue(org.jooq.impl.DSL.field("now()", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "");

    /**
     * The column <code>public.juser.last_login_at</code>.
     */
    public final TableField<JuserRecord, LocalDateTime> LAST_LOGIN_AT = createField("last_login_at", org.jooq.impl.SQLDataType.LOCALDATETIME, this, "");

    /**
     * The column <code>public.juser.is_role_admin</code>.
     */
    public final TableField<JuserRecord, Boolean> IS_ROLE_ADMIN = createField("is_role_admin", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>public.juser.is_activated</code>.
     */
    public final TableField<JuserRecord, Boolean> IS_ACTIVATED = createField("is_activated", org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * Create a <code>public.juser</code> table reference
     */
    public Juser() {
        this("juser", null);
    }

    /**
     * Create an aliased <code>public.juser</code> table reference
     */
    public Juser(String alias) {
        this(alias, JUSER);
    }

    private Juser(String alias, Table<JuserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Juser(String alias, Table<JuserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JuserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_JUSER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JuserRecord> getPrimaryKey() {
        return Keys.JUSER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JuserRecord>> getKeys() {
        return Arrays.<UniqueKey<JuserRecord>>asList(Keys.JUSER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Juser as(String alias) {
        return new Juser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Juser rename(String name) {
        return new Juser(name, null);
    }
}
