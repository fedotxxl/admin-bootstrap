upstream prerender {
  server 127.0.0.1:3000 max_fails=10 fail_timeout=10s;
}

server {
  ##
  # Logging Settings
  ##

  access_log $DSP_CLIENT_NGINX_ROOT/nginx/log/access.log;
  error_log $DSP_CLIENT_NGINX_ROOT/nginx/log/error.log;

  listen 80;
  listen [::]:80;
  server_name dsp.dev;

  root $DSP_CLIENT_NGINX_ROOT/static/;

  error_page 403 = /403;
  error_page 404 /404.html;
  error_page 500 502 503 504 /503.html;

  location /403 {
    if ($location) {
      return 302 $location;
    }

    return 403;
  }

  #STATIC FILES
  location ~* ^/(js|css|img|fonts)/ {
    try_files $uri =404;

    add_header Access-Control-Allow-Origin "*";
    add_header Cache-control no-cache;
  }

  #APP MAPPING
  location /api/ {
    proxy_pass http://dockerhost:8080/api/;
    proxy_redirect off;

    proxy_set_header Host $host;
    proxy_set_header Origin $http_origin;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location / {
    auth_request /nginx-route;
    auth_request_set $location $upstream_http_location;
    auth_request_set $route $upstream_http_route;

    add_header Cache-control no-cache;

    try_files /routes/$route.html =404;
  }

  location = / {
    return 302 /app/;
  }

  location = /app {
    return 302 /app/;
  }

  location = /app/ {
    return 302 /app/media-plans/;
  }

  location = /nginx-route {
    allow 127.0.0.1;
    deny all;
    internal;

    proxy_pass   http://dockerhost:8080/api/nginx/route;
    proxy_set_header X-Original-Domain $server_name;
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header X-Original-Method $request_method;
  }

  location = /404.html {
    root $DSP_CLIENT_NGINX_ROOT/static/routes/;
    internal;
  }

  location = /503.html {
    root $DSP_CLIENT_NGINX_ROOT/static/routes/;
    internal;
  }

  location /logout {
    proxy_pass http://dockerhost:8080/logout;
    proxy_set_header Host $host;
  }
}